trigger:
  branches:
    include:
    - '*'
  tags:
    exclude:
    - '*'

resources:
  - repo: self

variables:
  containerRegistry: DockerHub
  isHotfixBranch: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')]
  isMainBranch: $[eq(variables['Build.SourceBranchName'], 'main')]
  isReleaseBranch: $[or(eq(variables.isHotfixBranch, true), eq(variables.isMainBranch, true))]

pool:
  vmImage: ubuntu-latest

stages:
  - stage: 'Build'
    displayName: 'Build & Test'
    jobs:
      - job: 'Build'
        steps:
          #- bash: ./check-disabled-tests.sh
          #  displayName: Check for disabled tests
          - task: NodeTool@0
            inputs:
              versionSpec: '20.12.2'          
          - task: Npm@1
            displayName: NPM install
            inputs:
              command: ci          
          - task: Npm@1
            displayName: Lint
            inputs:
              command: custom
              customCommand: run lint
          - task: Npm@1
            displayName: Run tests
            inputs:
              command: custom
              customCommand: run test-ci
          - task: Npm@1
            displayName: Build application
            inputs:
              command: custom
              customCommand: run build          
          - task: Docker@2
            displayName: Build and push docker image
            condition: and(succeeded(), eq(variables.isReleaseBranch, true))
            inputs:
              containerRegistry: ${{ variables.containerRegistry }}
              repository: pizzaselector/pizza-selector-ui
              command: buildAndPush
              Dockerfile: '**/Dockerfile'
              buildContext: '$(Build.Repository.LocalPath)'
              tags: |
                $(Build.BuildId)
                latest

  - stage: 'DEV'
    displayName: 'Deploy to DEV environment'
    dependsOn: Build
    condition: |
      and
      (
        succeeded(),
        eq(variables.isReleaseBranch, true),
        eq(variables.isHotfixBranch, false)
      )
    jobs:
      - deployment: 'Deploy'
        environment: 'DEV'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: 'Azure App Service Deploy: pizza-selector-ui-dev'
                  inputs:
                    azureSubscription: 'DEV_SC'
                    appType: webAppContainer
                    WebAppName: pizza-selector-ui-dev
                    DockerNamespace: index.docker.io
                    DockerRepository: pizzaselector/pizza-selector-ui
                    DockerImageTag: '$(Build.BuildId)'

  - stage: 'PROD'
    displayName: 'Deploy to PROD environment'
    dependsOn: DEV
    condition: |
      and
      (
        succeeded(),
        or(
          eq(variables.isReleaseBranch, true),
          eq(variables.isHotfixBranch, true)
        )
      )
    jobs:
      - deployment: 'Deploy'
        environment: 'PROD'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  displayName: 'Azure App Service Deploy: pizza-selector-ui-prod'
                  inputs:
                    azureSubscription: 'PROD_SC'
                    appType: webAppContainer
                    WebAppName: pizza-selector-ui-prod
                    DockerNamespace: index.docker.io
                    DockerRepository: pizzaselector/pizza-selector-ui
                    DockerImageTag: '$(Build.BuildId)'